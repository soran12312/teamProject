<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="MainMapper">


	<!-- 이메일을 받아 해당 이메일이 회원테이블에 있는지 확인 -->
	<select id="loginCheck" resultType="HashMap" parameterType="com.pi.domain.MemberVO">
		SELECT m.email email 
		, m.nickname nickname
		, m.member_grade member_grade
		, m.member_state member_state
		, m.introduce introduce
		, m.business_number business_number
		, i.path path
		FROM member m LEFT OUTER JOIN image i 
		ON m.email = i.email
		WHERE m.email=#{email}
	</select>
	
	<!-- DB에서 시,도 정보 가져옴 -->
	<select id="selectAddr1" resultType="com.pi.domain.LocationVO">
		SELECT DISTINCT addr1 FROM location
	</select>
	
	<!-- DB에서 시,군,구 정보 가져옴 -->
	<select id="selectAddr2" resultType="com.pi.domain.LocationVO" parameterType="com.pi.domain.LocationVO">
		SELECT DISTINCT addr2 FROM location WHERE addr1 = #{addr1}
	</select>
	
	<!-- DB에서 법정동명 정보 가져옴 -->
	<select id="selectAddr3" resultType="com.pi.domain.LocationVO" parameterType="com.pi.domain.LocationVO">
		SELECT DISTINCT addr3 FROM location WHERE addr2 = #{addr2}
	</select>
	
	<!-- 이용자가 선택한 지역명으로 지역번호를 찾아옴 -->
	<select id="selectLocNumByAddr" resultType="com.pi.domain.LocationVO" parameterType="com.pi.domain.LocationVO">
		SELECT location_number FROM location WHERE addr1 = #{addr1} AND addr2 = #{addr2} AND addr3 = #{addr3}
	</select>
	
	<!-- 문의등록 -->
	<insert id="insertQuestion" parameterType="com.pi.domain.QuestionVO">
		INSERT INTO question
		( email, question_category, title, content, member_check ) 
		VALUES
		( #{email}, #{question_category}, #{title}, #{content}, #{member_check} )
	</insert>
	
	<!-- 문의이미지등록 -->
	<insert id="insertQImage" parameterType="com.pi.domain.ImageVO">
		INSERT INTO image 
		( question_number, original_name, save_name, path, size )
		VALUES
		( (SELECT MAX(question_number) FROM question)
		, #{original_name}, #{save_name}, #{path}, #{size} )
	</insert>
	
	<!-- 회원이메일로 해당 회원의 관심지역정보를 가져옴 -->
	<select id="selectAllLocationNumberByEmail" resultType="HashMap" parameterType="String">
		SELECT l.location_number location_number
		, l.addr1 addr1
		, l.addr2 addr2
		, l.addr3 addr3
		, i.interest_location_number interest_location_number
		FROM location l INNER JOIN 
		(SELECT location_number, interest_location_number FROM interest_location
		WHERE email = #{email}) i 
		ON l.location_number = i.location_number
	</select>
	
	<!-- 메인화면 인기 무료강좌 -->
	<select id="selectDailyFreeClass" resultType="HashMap" parameterType="com.pi.domain.InterestLocationVO">
		SELECT 
		IFNULL(l.class_like,0) class_like 
		, c.class_number class_number 
		, c.class_name class_name 
		, i.path path 
		FROM class c LEFT OUTER JOIN
		(SELECT IFNULL(COUNT(like_state=1),0) class_like , class_number 
		FROM `like` 
		WHERE like_date=(SELECT DATE_FORMAT(NOW(),'%Y%m%d')) 
		GROUP BY class_number) l 
		ON c.class_number = l.class_number 
		INNER JOIN 
		(SELECT path, class_number 
		FROM image GROUP BY class_number 
		ORDER BY image_number DESC) i 
		ON c.class_number = i.class_number 
		WHERE c.price = 0 
		<if test="location_number1 != null">
		AND ( c.location_number = #{location_number1} 
		OR c.location_number = #{location_number2} 
		OR c.location_number = #{location_number3} )
		</if>
		ORDER BY class_like DESC LIMIT 10
	</select>
	
	<!-- 메인화면 추천강좌 -->
	<select id="selectDailyRecomClass" resultType="HashMap" parameterType="com.pi.domain.InterestLocationVO">
		SELECT 
		IFNULL(l.class_like,0) class_like 
		, c.class_number class_number 
		, c.class_name class_name 
		, i.path path 
		FROM class c LEFT OUTER JOIN
		(SELECT IFNULL(COUNT(like_state=1),0) class_like , class_number 
		FROM `like` 
		WHERE like_date=(SELECT DATE_FORMAT(NOW(),'%Y%m%d')) 
		GROUP BY class_number) l 
		ON c.class_number = l.class_number 
		INNER JOIN (SELECT path, class_number 
		FROM image GROUP BY class_number 
		ORDER BY image_number DESC) i 
		ON c.class_number = i.class_number 
		INNER JOIN member m ON c.email = m.email
		WHERE m.member_grade = 3 
		<if test="location_number1 != null">
		AND ( c.location_number = #{location_number1} 
		OR c.location_number = #{location_number2} 
		OR c.location_number = #{location_number3} )
		</if>
		ORDER BY class_like DESC LIMIT 10
	</select>
	
	<!-- 메인화면 인기강좌 -->
	<select id="selectDailyClass" resultType="HashMap" parameterType="com.pi.domain.InterestLocationVO">
		SELECT 
		IFNULL(l.class_like,0) class_like 
		, c.class_number class_number 
		, c.class_name class_name 
		, i.path path 
		FROM class c LEFT OUTER JOIN
		(SELECT IFNULL(COUNT(like_state=1),0) class_like , class_number 
		FROM `like` 
		WHERE like_date=(SELECT DATE_FORMAT(NOW(),'%Y%m%d')) 
		GROUP BY class_number) l 
		ON c.class_number = l.class_number 
		INNER JOIN (SELECT path, class_number 
		FROM image GROUP BY class_number 
		ORDER BY image_number DESC) i 
		ON c.class_number = i.class_number 
		INNER JOIN member m ON c.email = m.email
		<if test="location_number1 != null">
		WHERE ( c.location_number = #{location_number1} 
		OR c.location_number = #{location_number2} 
		OR c.location_number = #{location_number3} )
		</if>
		ORDER BY class_like DESC LIMIT 10
	</select>
	
	<!-- 메인화면 인기리뷰 -->
	<select id="selectDailyReview" resultType="HashMap">
		SELECT 
		IFNULL(l.review_like,0) review_like 
		, r.review_number review_number 
		, r.title title 
		, i.path path 
		FROM review r LEFT OUTER JOIN
		(SELECT IFNULL(COUNT(like_state=1),0) review_like , review_number 
		FROM `like` 
		WHERE like_date=(SELECT DATE_FORMAT(NOW(),'%Y%m%d')) 
		GROUP BY review_number) l 
		ON r.review_number = l.review_number 
		INNER JOIN (SELECT path, review_number 
		FROM image GROUP BY review_number 
		ORDER BY image_number DESC) i 
		ON r.review_number = i.review_number 
		INNER JOIN member m ON r.email = m.email
		ORDER BY review_like DESC LIMIT 10
	</select>

</mapper>